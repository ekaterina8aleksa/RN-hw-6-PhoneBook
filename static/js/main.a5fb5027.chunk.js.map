{"version":3,"sources":["components/Phonebook.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","payload","name","number","id","shortid","generate","deleteContact","filterContact","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","MODE_ENV","persistor","persistStore","ContactForm","handelChange","e","currentTarget","value","setState","handleSubmit","preventDefault","isExist","props","some","contact","trim","toLowerCase","invalide","isNaN","length","toast","warn","info","success","onSubmit","reset","this","className","styles","label","type","placeholder","onChange","input","button","Component","connect","dispatch","contactsActions","ContactItem","onDelete","onClick","getFilteredContacts","allContacts","preparedContacts","includes","onDeleteContact","list","map","item","target","finder","App","formListener","onAddContact","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a5fb5027.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__3DeVK\",\"text\":\"Phonebook_text__24hR_\",\"button\":\"Phonebook_button__3s8DC\",\"label\":\"Phonebook_label__2ztAk\",\"input\":\"Phonebook_input__1pM2S\",\"finder\":\"Phonebook_finder__p9uyY\",\"item\":\"Phonebook_item__z2NqJ\",\"hidden\":\"Phonebook_hidden__1SQqi\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"contacts/Add\", ({ name, number }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id: shortid.generate(),\n    },\n  };\n});\n\nconst deleteContact = createAction(\"contacts/Delete\");\n\nconst filterContact = createAction(\"contacts/Filter\");\n\nexport default { addContact, deleteContact, filterContact };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport contactsReducer from \"./contacts-reducer\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.MODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport styles from \"../Phonebook.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    const isExist = contacts.some(\n      (contact) =>\n        contact.name.trim().toLowerCase() === name.trim().toLowerCase()\n    );\n    const invalide = isNaN(number);\n\n    if (name.length === 0 || number.length === 0) {\n      toast.warn(`Fill the form, please ＼(°o°)／ `);\n    } else if (isExist) {\n      toast.info(`${name} already exist (〒﹏〒) `);\n    } else if (invalide) {\n      toast.info(`${number} is invalide phone number 乁( •_• )ㄏ `);\n    } else {\n      toast.success(\" (๑˙❥˙๑) You added new contact!\");\n      this.props.onSubmit(this.state);\n    }\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <ToastContainer />\n        <h2>PhoneBook</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name...\"\n              value={this.state.name}\n              onChange={this.handelChange}\n              className={styles.input}\n            />\n          </label>\n\n          <label className={styles.label}>\n            Phone Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter number...\"\n              value={this.state.number}\n              onChange={this.handelChange}\n              className={styles.input}\n            />\n          </label>\n\n          <label>\n            <button type=\"submit\" className={styles.button}>\n              Add Contact\n            </button>\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <>\n      {name}: {number}\n      <button type=\"button\" className={styles.button} onClick={onDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={styles.list}>\n          {contacts.map(({ name, number, id }) => (\n            <li key={id} className={styles.item}>\n              <ContactItem\n                id={id}\n                number={number}\n                name={name}\n                onDelete={() => onDeleteContact(id)}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const preparedContacts = filter.trim().toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.trim().toLowerCase().includes(preparedContacts)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport styles from \"../Phonebook.module.css\";\n\nconst Filter = ({ value, onChange, contacts }) =>\n  contacts.length >= 2 && (\n    <label className={styles.finder}>\n      Finder\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search for...\"\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.filterContact(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <ContactForm\n          onSubmit={this.formListener}\n          onAddContact={this.addContact}\n        />\n        <Filter />\n\n        <h3>Contacts</h3>\n\n        <ContactList />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}